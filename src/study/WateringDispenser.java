package src.study;

public class WateringDispenser {
    int sharedWater = 12; // 가장 바깥 영역에 있는 변수를 전역변수로 선언
    // 어느 곳이든 접근이 가능하므로 drinkWater 메서드 영역에서도 사용 가능

    void drinkWater(int amount) {
        // 지역 변수와 같은 개념
        // sharedWater 지역 변수는 해당 지역 영역 안에서만 사용 가능하다.
        sharedWater = sharedWater - amount;
    }

    void checkWater() {
        if (sharedWater > 0) {
            int y = sharedWater;
            // 이 때 블록 영역 안에 있는 변수는 블록 변수
            // sharedWater 전역 변수이므로 어디서든지 접근이 가능
            // y 같은 블록 변수는 해당 블록 영역 안에서만 사용이 가능하다.
        }
        // 보통 전역변수는 지역변수나 블록 변수에서 사용이 가능하지만
        // 지역 변수에 선언된 변수를 전역 변수에서 사용하는 것은 불가하다.
        // 혹은 블록 변수에서 선언된 변수를 지역 영역에서 사용하는 것도 불가하다.
        // 이러한 문제점을 해결하기 위해 나온 개념이 객체(new)이며,
        // 이러한 개념은 JVM 힙, 메서드, 스택 영역과 연관되어 메모리에 객체가 저장된다.
        // 객체를 쉽게 생각하면 어디서든 접근이 가능하게 만들어주는 바구니 정도로 생각하면 될 것 같다.


/*        선언 위치의 차이

        지역 변수는 메서드 바로 안쪽에 선언됨.

        블록 변수는 if, for 등 특정 블록 안쪽에 선언됨.

                사용 범위의 차이

        지역 변수: 메서드 안에서는 어디서든 사용 가능.

                블록 변수: 선언된 블록 내부에서만 사용 가능.

                생명주기의 차이

        지역 변수는 메서드가 끝날 때까지 살아 있음.

                블록 변수는 블록이 끝나면 바로 사라짐.*/
    }
}
